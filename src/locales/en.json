{
  "Console": "Console",
  "alert": {
    "adding": {
      "directory": "Adding folder {name}",
      "file": "Adding file {name}"
    },
    "clone-failed": "Clone repo {url} failed: {message}",
    "clone-success": "Clone repo {url} successfully",
    "cloneing": "Cloning repo {url}",
    "created": {
      "file": "Created file {name}",
      "folder": "Created folder {name}",
      "project": "Created project {name}"
    },
    "exported": {
      "file": "Exported file {name}",
      "folder": "Exported folder {name}",
      "project": "Exported project {name}"
    },
    "extract-file": "Extract file {name}",
    "extract-folder": "Extract folder {name}",
    "extracting-zip": "Extracting file zip from {name}",
    "file-name-invalidate": "A file or folder $$name already exists at this location Please choose a different names",
    "file-name-not-empty": "A file or folder name must be provided",
    "import-files": "Import file(s)",
    "imported-project": "Imported project {list}",
    "imported-type": "Imported {type} {list}",
    "login-success": "Login success!",
    "reload-files": "Reload files(s)",
    "reload-projects": "Reload projects",
    "remove": {
      "file-failed": "Remove file {name} failed",
      "folder-failed": "Remove folder {name} failed",
      "project-failed": "Remove project {name} failed"
    },
    "removed": {
      "file": "Removed file {name}",
      "folder": "Removed folder {name}",
      "project": "Removed project {name}"
    },
    "removing": {
      "file": "Removing file {name}",
      "folder": "Removing folder {name}",
      "project": "Removing project {name}"
    },
    "rename": {
      "file-failed": "Rename file {path} failed",
      "folder-failed": "Rename folder {path} failed"
    },
    "renamed": {
      "file-from-to": "Renamed file {old} to {new}",
      "folder-from-to": "Renamed folder {old} to {new}"
    },
    "saving-file": "Saving file {name}",
    "saving-file-index": "Saving file {name} {index}/{length}",
    "webserver-start-at": "WebServer started on port {port}",
    "webserver-stoped": "WebServer closed",
    "zip-saved": "Successfully zip saved in {name}",
    "ziping": "Ziping folder {name}"
  },
  "done": "Done",
  "error": {
    "git": {
      "403": "Git 403 Try login...",
      "auth-not-ready": "Auth config not ready"
    },
    "login-failed": "Access was denied Login failure!",
    "match-code": "What you typed did not match {code}"
  },
  "files(s)": "files(s)",
  "label": {
    "cancel": "Cancel",
    "change-logs": "Change Logs",
    "checkout": "Checkout",
    "clone-repo": "Clone Repo",
    "copy": "Copy",
    "create": "Create",
    "create-project": "Create Project",
    "credentials": "Credentials",
    "cut": "Cut",
    "definition": "Definition",
    "delete": "Delete",
    "delete-project": "Delete Project",
    "email": "Email",
    "export-file": "Export File",
    "export-folder": "Export ZIP",
    "export-zip": "Export Zip",
    "files-exclude": "files to exclude",
    "files-include": "files to include",
    "find": "Find",
    "find-all": "Find All",
    "format": "Format",
    "import-files": "Import Files",
    "import-zip": "Import ZIP",
    "modified": "Modified",
    "name": "Name",
    "new-file": "New File",
    "new-folder": "New Folder",
    "new-project": "New Project",
    "next-error": "Next Error",
    "not-recovery": "will permanently deleted. It can NOT be recovered!",
    "ok": "OK",
    "paste": "Paste",
    "project": "Project",
    "project-name": "Project Name",
    "project-template": "Project Template",
    "provider": "Provider",
    "redo": "Redo",
    "rename": "Rename",
    "set-credentials": "Set Credentials",
    "settings": "Settings",
    "show-info": "Show Info",
    "signature": "Signature",
    "source-control": "Source Control",
    "template": "Template",
    "to-access-private": "to access Private Repository",
    "to-confirm": "to confirm.",
    "type": "Type",
    "undo": "Undo",
    "view-labs": "View Labs"
  },
  "placeholder": {
    "email": "Email",
    "git": "URL (Start with https://)",
    "mail": "Mail",
    "name": "Name",
    "password": "Password",
    "replace": "Replace",
    "search": "Search",
    "username": "Username"
  },
  "preload": {
    "checking-last-session": "Checking last session",
    "checking-permission": "Checking permissing storage",
    "loading-resources": "Loading resources"
  }
}
