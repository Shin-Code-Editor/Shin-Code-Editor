{
  "alert": {
    "imported": {
      "file(s)": "Imported file(s) {list}",
      "project(s)": "Imported project(s) {list}"
    },
    "importing": "Importing...",
    "created": {
      "file": "Created file {name}",
      "dir": "Created folder {name}",
      "project": "Created project {name}"
    },
    "removing": {
      "file": "Removing file {name}",
      "dir": "Removing folder {name}",
      "project": "Removing project {name}"
    },
    "removed": {
      "file": "Removed file {name}",
      "dir": "Removed folder {name}",
      "project": "Removed project {name}"
    },
    "exported": {
      "dir": "Exported folder {name}",
      "file": "Exported file {name}",
      "project": "Exported project {name}"
    },
    "renaming": "Renaming {from} to {to}",
    "renamed": "Renamed {from} to {to}",
    "cloning": "Cloning repo from {url}",
    "reload": {
      "project": "Reload project",
      "file(s)": "Reload file(s)"
    },
    "extracting": "Extracting zip from {url}",
    "archiving": "Archiving folder {name}",
    "saving": {
      "dir": "Saving folder {name}",
      "file": "Saving file {name}"
    },
    "adding": {
      "dir": "Adding folder {name}",
      "file": "Adding file {name}"
    },
    "git": {
      "403": "Git 403 Try login...",
      "config-host-unknown": "Auth config host {host} unknown"
    },
    "webserver": {
      "start-at": "Webserver start at {port}",
      "stoped": "Webserver stoped"
    },

    "failure": {
      "remove": {
        "dir": "Remove folder {name} failure",
        "file": "Remove file {name} failure",
        "project": "Remove project {name} failure"
      },
      "rename": "Rename {from} to {to} failure",
      "clone": "Clone repo {url} failure",
      "reload": {
        "project": "Reload project failure",
        "file(s)": "Reload file(s) failure"
      },
      "git": {
        "login": "Git login failure"
      },
      "export": {
        "file": "Export file {name} failure"
      }
    },
    "successfully": {
      "clone": "Clone repo {url} successfully",
      "git": {
        "login": "Git login successful"
      }
    }
  },
  "label": {
    "done": "Done",
    "files(s)": "files(s)",
    "console": "Console",
    "cancel": "Cancel",
    "change-logs": "Change Logs",
    "checkout": "Checkout",
    "clone-repo": "Clone Repo",
    "copy": "Copy",
    "create": "Create",
    "create-project": "Create Project",
    "credentials": "Credentials",
    "cut": "Cut",
    "definition": "Definition",
    "delete": "Delete",
    "delete-project": "Delete Project",
    "email": "Email",
    "export-file": "Export File",
    "export-folder": "Export ZIP",
    "export-zip": "Export Zip",
    "files-exclude": "files to exclude",
    "files-include": "files to include",
    "find": "Find",
    "find-all": "Find All",
    "format": "Format",
    "import-files": "Import Files",
    "import-zip": "Import ZIP",
    "modified": "Modified",
    "name": "Name",
    "new-file": "New File",
    "new-folder": "New Folder",
    "new-project": "New Project",
    "next-error": "Next Error",
    "not-recovery": "will permanently deleted. It can NOT be recovered!",
    "ok": "OK",
    "paste": "Paste",
    "project": "Project",
    "project-name": "Project Name",
    "project-template": "Project Template",
    "provider": "Provider",
    "redo": "Redo",
    "rename": "Rename",
    "set-credentials": "Set Credentials",
    "settings": "Settings",
    "show-info": "Show Info",
    "signature": "Signature",
    "source-control": "Source Control",
    "template": "Template",
    "to-access-private": "to access Private Repository",
    "to-confirm": "to confirm.",
    "type": "Type",
    "undo": "Undo",
    "view-labs": "View Labs"
  },
  "validate": {
    "name": {
      "not-empty": "A file or folder name must be provided",
      "invalid": "A file or folder $$name already exists at this location Please choose a different names"
    }
  },
  "placeholder": {
    "email": "Email",
    "git": "URL (Start with https://)",
    "mail": "Mail",
    "name": "Name",
    "password": "Password",
    "replace": "Replace",
    "search": "Search",
    "username": "Username"
  },
  "preload": {
    "checking-last-session": "Checking last session",
    "checking-permission": "Checking permissing storage",
    "loading-resources": "Loading resources"
  }
}
